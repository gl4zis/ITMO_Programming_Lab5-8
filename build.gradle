project(':server') {
    apply plugin: 'application'
    application {
        mainClass = 'server.Main'
    }

    dependencies {
        implementation project(':common')
        implementation 'org.postgresql:postgresql:42.6.0'
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest {
            attributes 'Main-Class': 'server.Main'
        }
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}
project(':client') {
    apply plugin: 'application'
    application {
        mainClass = 'client.Main'
    }

    dependencies {
        implementation project(':common')
        implementation 'org.openjdk.nashorn:nashorn-core:15.4'
    }

    jar {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest {
            attributes 'Main-Class': 'client.Main'
        }
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}
allprojects {
    apply plugin: 'java'

    group 'ru.ifmo.se'
    version '3.2.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
        testImplementation 'org.mockito:mockito-core:5.3.1'
        implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
        implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
        implementation 'org.apache.commons:commons-lang3:3.12.0'
    }

    test {
        useJUnitPlatform()
    }

    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    javadoc {
        options.encoding = 'UTF-8'
    }
}